взято из книги с. Макконелл - "Совершенный код", стр. 494

1.  Тестируйте программу на предмет реализации КАЖДОГО существенного требования.
    Планируйте тесты для КАЖДОГО этапа на стадии выработки требований 
    или как можно раньше - лучше всего ДО НАПИСАНИЯ тестируемого блока.
    Подумайте о тестах, которые позволили бы выявить распространенные пробелы в требованиях.
    Уровень безопасности, хранение данных, процедура установки и надежность системы 
    - все эти области тестирования часто упускаются на этапе выработки требований.

2.  Тестируйте программу на предмет реализации КАЖДОГО существенного аспекта проектирования.
    Планируйте тесты для этого этапа на стадии проектирования или как можно раньше 
    - ДО НАЧАЛА детального кодирования метода или класса, подлежащего тестированию.

3.  Используя "базисное тестирование", дополните тесты требований и проекта детальными тестами.
    Разработайте тесты, основанные на потоках данных, а затем создайте остальные тесты нужные для тщательного тестирования кода.
    Как минимум вы должны протестировать каждую строку кода.

4. Используйте контрольный список ошибок, созданный вами для текущего проекта или в предыдущих проектах.

необходимо обеспечить максимальную вероятность обнаружения ошибок

каждый оператор программы необходимо протестировать хотя бы один раз (structured basis testing)

необходимо учитывать сложность выражения, для того, чтобы оператор был протестирован должным образом, 
если он находится допустим внутри логического выражения (if) цикла (while) и других конструкций


Минимальное число тестов для структурированного базисного тестирования:
1. начните по 1 для последовательного пути выполнения метода:
2. + 1 для каждого из ключевых слов (if, while, repeat, for, and, or); измерение сложности раздела на стр. 451
3. + 1 для каждого блока case (если блок отсутствует, используемый по умолчанию, то прибавьте ещё 1)


